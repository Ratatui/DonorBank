//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("DonorBankDatabaseModel", "FK__Blood__IdDonor__76969D2E", "Donor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DonorBank.Web.Donor), "Blood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DonorBank.Web.Blood), true)]
[assembly: EdmRelationshipAttribute("DonorBankDatabaseModel", "FK__RespondBl__IdCli__7C4F7684", "Clinic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DonorBank.Web.Clinic), "RespondBlood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DonorBank.Web.RespondBlood), true)]
[assembly: EdmRelationshipAttribute("DonorBankDatabaseModel", "FK__RespondTr__IdCli__7F2BE32F", "Clinic", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DonorBank.Web.Clinic), "RespondTransplantant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DonorBank.Web.RespondTransplantant), true)]
[assembly: EdmRelationshipAttribute("DonorBankDatabaseModel", "FK__Transplan__IdDon__797309D9", "Donor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DonorBank.Web.Donor), "Transplantant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DonorBank.Web.Transplantant), true)]

#endregion

namespace DonorBank.Web
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class DonorBankDatabaseEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект DonorBankDatabaseEntities, используя строку соединения из раздела "DonorBankDatabaseEntities" файла конфигурации приложения.
        /// </summary>
        public DonorBankDatabaseEntities() : base("name=DonorBankDatabaseEntities", "DonorBankDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DonorBankDatabaseEntities.
        /// </summary>
        public DonorBankDatabaseEntities(string connectionString) : base(connectionString, "DonorBankDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта DonorBankDatabaseEntities.
        /// </summary>
        public DonorBankDatabaseEntities(EntityConnection connection) : base(connection, "DonorBankDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Blood> Blood
        {
            get
            {
                if ((_Blood == null))
                {
                    _Blood = base.CreateObjectSet<Blood>("Blood");
                }
                return _Blood;
            }
        }
        private ObjectSet<Blood> _Blood;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Clinic> Clinic
        {
            get
            {
                if ((_Clinic == null))
                {
                    _Clinic = base.CreateObjectSet<Clinic>("Clinic");
                }
                return _Clinic;
            }
        }
        private ObjectSet<Clinic> _Clinic;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Donor> Donor
        {
            get
            {
                if ((_Donor == null))
                {
                    _Donor = base.CreateObjectSet<Donor>("Donor");
                }
                return _Donor;
            }
        }
        private ObjectSet<Donor> _Donor;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RespondBlood> RespondBlood
        {
            get
            {
                if ((_RespondBlood == null))
                {
                    _RespondBlood = base.CreateObjectSet<RespondBlood>("RespondBlood");
                }
                return _RespondBlood;
            }
        }
        private ObjectSet<RespondBlood> _RespondBlood;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<RespondTransplantant> RespondTransplantant
        {
            get
            {
                if ((_RespondTransplantant == null))
                {
                    _RespondTransplantant = base.CreateObjectSet<RespondTransplantant>("RespondTransplantant");
                }
                return _RespondTransplantant;
            }
        }
        private ObjectSet<RespondTransplantant> _RespondTransplantant;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<TransactionInfo> TransactionInfo
        {
            get
            {
                if ((_TransactionInfo == null))
                {
                    _TransactionInfo = base.CreateObjectSet<TransactionInfo>("TransactionInfo");
                }
                return _TransactionInfo;
            }
        }
        private ObjectSet<TransactionInfo> _TransactionInfo;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Transplantant> Transplantant
        {
            get
            {
                if ((_Transplantant == null))
                {
                    _Transplantant = base.CreateObjectSet<Transplantant>("Transplantant");
                }
                return _Transplantant;
            }
        }
        private ObjectSet<Transplantant> _Transplantant;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Blood. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBlood(Blood blood)
        {
            base.AddObject("Blood", blood);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Clinic. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToClinic(Clinic clinic)
        {
            base.AddObject("Clinic", clinic);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Donor. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDonor(Donor donor)
        {
            base.AddObject("Donor", donor);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RespondBlood. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRespondBlood(RespondBlood respondBlood)
        {
            base.AddObject("RespondBlood", respondBlood);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet RespondTransplantant. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRespondTransplantant(RespondTransplantant respondTransplantant)
        {
            base.AddObject("RespondTransplantant", respondTransplantant);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet TransactionInfo. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransactionInfo(TransactionInfo transactionInfo)
        {
            base.AddObject("TransactionInfo", transactionInfo);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Transplantant. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransplantant(Transplantant transplantant)
        {
            base.AddObject("Transplantant", transplantant);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="Blood")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Blood : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Blood.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="idDonor">Исходное значение свойства IdDonor.</param>
        /// <param name="storageTime">Исходное значение свойства StorageTime.</param>
        /// <param name="purpose">Исходное значение свойства Purpose.</param>
        public static Blood CreateBlood(global::System.Int32 id, global::System.Int32 idDonor, global::System.DateTime storageTime, global::System.String purpose)
        {
            Blood blood = new Blood();
            blood.Id = id;
            blood.IdDonor = idDonor;
            blood.StorageTime = storageTime;
            blood.Purpose = purpose;
            return blood;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdDonor
        {
            get
            {
                return _IdDonor;
            }
            set
            {
                OnIdDonorChanging(value);
                ReportPropertyChanging("IdDonor");
                _IdDonor = StructuralObject.SetValidValue(value, "IdDonor");
                ReportPropertyChanged("IdDonor");
                OnIdDonorChanged();
            }
        }
        private global::System.Int32 _IdDonor;
        partial void OnIdDonorChanging(global::System.Int32 value);
        partial void OnIdDonorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StorageTime
        {
            get
            {
                return _StorageTime;
            }
            set
            {
                OnStorageTimeChanging(value);
                ReportPropertyChanging("StorageTime");
                _StorageTime = StructuralObject.SetValidValue(value, "StorageTime");
                ReportPropertyChanged("StorageTime");
                OnStorageTimeChanged();
            }
        }
        private global::System.DateTime _StorageTime;
        partial void OnStorageTimeChanging(global::System.DateTime value);
        partial void OnStorageTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value, false, "Purpose");
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.String _Purpose;
        partial void OnPurposeChanging(global::System.String value);
        partial void OnPurposeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__Blood__IdDonor__76969D2E", "Donor")]
        public Donor Donor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("DonorBankDatabaseModel.FK__Blood__IdDonor__76969D2E", "Donor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("DonorBankDatabaseModel.FK__Blood__IdDonor__76969D2E", "Donor").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Donor> DonorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("DonorBankDatabaseModel.FK__Blood__IdDonor__76969D2E", "Donor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Donor>("DonorBankDatabaseModel.FK__Blood__IdDonor__76969D2E", "Donor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="Clinic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clinic : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Clinic.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="title">Исходное значение свойства Title.</param>
        /// <param name="addres">Исходное значение свойства Addres.</param>
        /// <param name="director">Исходное значение свойства Director.</param>
        /// <param name="username">Исходное значение свойства Username.</param>
        public static Clinic CreateClinic(global::System.Int32 id, global::System.String title, global::System.String addres, global::System.String director, global::System.String username)
        {
            Clinic clinic = new Clinic();
            clinic.Id = id;
            clinic.Title = title;
            clinic.Addres = addres;
            clinic.Director = director;
            clinic.Username = username;
            return clinic;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false, "Title");
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Addres
        {
            get
            {
                return _Addres;
            }
            set
            {
                OnAddresChanging(value);
                ReportPropertyChanging("Addres");
                _Addres = StructuralObject.SetValidValue(value, false, "Addres");
                ReportPropertyChanged("Addres");
                OnAddresChanged();
            }
        }
        private global::System.String _Addres;
        partial void OnAddresChanging(global::System.String value);
        partial void OnAddresChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Director
        {
            get
            {
                return _Director;
            }
            set
            {
                OnDirectorChanging(value);
                ReportPropertyChanging("Director");
                _Director = StructuralObject.SetValidValue(value, false, "Director");
                ReportPropertyChanged("Director");
                OnDirectorChanged();
            }
        }
        private global::System.String _Director;
        partial void OnDirectorChanging(global::System.String value);
        partial void OnDirectorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__RespondBl__IdCli__7C4F7684", "RespondBlood")]
        public EntityCollection<RespondBlood> RespondBlood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RespondBlood>("DonorBankDatabaseModel.FK__RespondBl__IdCli__7C4F7684", "RespondBlood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RespondBlood>("DonorBankDatabaseModel.FK__RespondBl__IdCli__7C4F7684", "RespondBlood", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__RespondTr__IdCli__7F2BE32F", "RespondTransplantant")]
        public EntityCollection<RespondTransplantant> RespondTransplantant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RespondTransplantant>("DonorBankDatabaseModel.FK__RespondTr__IdCli__7F2BE32F", "RespondTransplantant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RespondTransplantant>("DonorBankDatabaseModel.FK__RespondTr__IdCli__7F2BE32F", "RespondTransplantant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="Donor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Donor : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Donor.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="firstName">Исходное значение свойства FirstName.</param>
        /// <param name="lastName">Исходное значение свойства LastName.</param>
        /// <param name="middleName">Исходное значение свойства MiddleName.</param>
        /// <param name="series">Исходное значение свойства Series.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        /// <param name="blood">Исходное значение свойства Blood.</param>
        public static Donor CreateDonor(global::System.Int32 id, global::System.String firstName, global::System.String lastName, global::System.String middleName, global::System.String series, global::System.Int32 number, global::System.String blood)
        {
            Donor donor = new Donor();
            donor.Id = id;
            donor.FirstName = firstName;
            donor.LastName = lastName;
            donor.MiddleName = middleName;
            donor.Series = series;
            donor.Number = number;
            donor.Blood = blood;
            return donor;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, false, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Series
        {
            get
            {
                return _Series;
            }
            set
            {
                OnSeriesChanging(value);
                ReportPropertyChanging("Series");
                _Series = StructuralObject.SetValidValue(value, false, "Series");
                ReportPropertyChanged("Series");
                OnSeriesChanged();
            }
        }
        private global::System.String _Series;
        partial void OnSeriesChanging(global::System.String value);
        partial void OnSeriesChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value, "Number");
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Blood
        {
            get
            {
                return _Blood;
            }
            set
            {
                OnBloodChanging(value);
                ReportPropertyChanging("Blood");
                _Blood = StructuralObject.SetValidValue(value, false, "Blood");
                ReportPropertyChanged("Blood");
                OnBloodChanged();
            }
        }
        private global::System.String _Blood;
        partial void OnBloodChanging(global::System.String value);
        partial void OnBloodChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Addres
        {
            get
            {
                return _Addres;
            }
            set
            {
                OnAddresChanging(value);
                ReportPropertyChanging("Addres");
                _Addres = StructuralObject.SetValidValue(value, true, "Addres");
                ReportPropertyChanged("Addres");
                OnAddresChanged();
            }
        }
        private global::System.String _Addres;
        partial void OnAddresChanging(global::System.String value);
        partial void OnAddresChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeathTime
        {
            get
            {
                return _DeathTime;
            }
            set
            {
                OnDeathTimeChanging(value);
                ReportPropertyChanging("DeathTime");
                _DeathTime = StructuralObject.SetValidValue(value, "DeathTime");
                ReportPropertyChanged("DeathTime");
                OnDeathTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeathTime;
        partial void OnDeathTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnDeathTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BloodDonor
        {
            get
            {
                return _BloodDonor;
            }
            set
            {
                OnBloodDonorChanging(value);
                ReportPropertyChanging("BloodDonor");
                _BloodDonor = StructuralObject.SetValidValue(value, "BloodDonor");
                ReportPropertyChanged("BloodDonor");
                OnBloodDonorChanged();
            }
        }
        private Nullable<global::System.Int32> _BloodDonor;
        partial void OnBloodDonorChanging(Nullable<global::System.Int32> value);
        partial void OnBloodDonorChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__Blood__IdDonor__76969D2E", "Blood")]
        public EntityCollection<Blood> Blood1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Blood>("DonorBankDatabaseModel.FK__Blood__IdDonor__76969D2E", "Blood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Blood>("DonorBankDatabaseModel.FK__Blood__IdDonor__76969D2E", "Blood", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__Transplan__IdDon__797309D9", "Transplantant")]
        public EntityCollection<Transplantant> Transplantant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transplantant>("DonorBankDatabaseModel.FK__Transplan__IdDon__797309D9", "Transplantant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transplantant>("DonorBankDatabaseModel.FK__Transplan__IdDon__797309D9", "Transplantant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="RespondBlood")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RespondBlood : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RespondBlood.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="idClinic">Исходное значение свойства IdClinic.</param>
        /// <param name="blood">Исходное значение свойства Blood.</param>
        /// <param name="count">Исходное значение свойства Count.</param>
        /// <param name="purpose">Исходное значение свойства Purpose.</param>
        /// <param name="timeCreate">Исходное значение свойства TimeCreate.</param>
        /// <param name="waitTime">Исходное значение свойства WaitTime.</param>
        /// <param name="status">Исходное значение свойства Status.</param>
        public static RespondBlood CreateRespondBlood(global::System.Int32 id, global::System.Int32 idClinic, global::System.String blood, global::System.Int32 count, global::System.String purpose, global::System.DateTime timeCreate, global::System.DateTime waitTime, global::System.String status)
        {
            RespondBlood respondBlood = new RespondBlood();
            respondBlood.Id = id;
            respondBlood.IdClinic = idClinic;
            respondBlood.Blood = blood;
            respondBlood.Count = count;
            respondBlood.Purpose = purpose;
            respondBlood.TimeCreate = timeCreate;
            respondBlood.WaitTime = waitTime;
            respondBlood.Status = status;
            return respondBlood;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdClinic
        {
            get
            {
                return _IdClinic;
            }
            set
            {
                OnIdClinicChanging(value);
                ReportPropertyChanging("IdClinic");
                _IdClinic = StructuralObject.SetValidValue(value, "IdClinic");
                ReportPropertyChanged("IdClinic");
                OnIdClinicChanged();
            }
        }
        private global::System.Int32 _IdClinic;
        partial void OnIdClinicChanging(global::System.Int32 value);
        partial void OnIdClinicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Blood
        {
            get
            {
                return _Blood;
            }
            set
            {
                OnBloodChanging(value);
                ReportPropertyChanging("Blood");
                _Blood = StructuralObject.SetValidValue(value, false, "Blood");
                ReportPropertyChanged("Blood");
                OnBloodChanged();
            }
        }
        private global::System.String _Blood;
        partial void OnBloodChanging(global::System.String value);
        partial void OnBloodChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Count
        {
            get
            {
                return _Count;
            }
            set
            {
                OnCountChanging(value);
                ReportPropertyChanging("Count");
                _Count = StructuralObject.SetValidValue(value, "Count");
                ReportPropertyChanged("Count");
                OnCountChanged();
            }
        }
        private global::System.Int32 _Count;
        partial void OnCountChanging(global::System.Int32 value);
        partial void OnCountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Purpose
        {
            get
            {
                return _Purpose;
            }
            set
            {
                OnPurposeChanging(value);
                ReportPropertyChanging("Purpose");
                _Purpose = StructuralObject.SetValidValue(value, false, "Purpose");
                ReportPropertyChanged("Purpose");
                OnPurposeChanged();
            }
        }
        private global::System.String _Purpose;
        partial void OnPurposeChanging(global::System.String value);
        partial void OnPurposeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeCreate
        {
            get
            {
                return _TimeCreate;
            }
            set
            {
                OnTimeCreateChanging(value);
                ReportPropertyChanging("TimeCreate");
                _TimeCreate = StructuralObject.SetValidValue(value, "TimeCreate");
                ReportPropertyChanged("TimeCreate");
                OnTimeCreateChanged();
            }
        }
        private global::System.DateTime _TimeCreate;
        partial void OnTimeCreateChanging(global::System.DateTime value);
        partial void OnTimeCreateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WaitTime
        {
            get
            {
                return _WaitTime;
            }
            set
            {
                OnWaitTimeChanging(value);
                ReportPropertyChanging("WaitTime");
                _WaitTime = StructuralObject.SetValidValue(value, "WaitTime");
                ReportPropertyChanged("WaitTime");
                OnWaitTimeChanged();
            }
        }
        private global::System.DateTime _WaitTime;
        partial void OnWaitTimeChanging(global::System.DateTime value);
        partial void OnWaitTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__RespondBl__IdCli__7C4F7684", "Clinic")]
        public Clinic Clinic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondBl__IdCli__7C4F7684", "Clinic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondBl__IdCli__7C4F7684", "Clinic").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clinic> ClinicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondBl__IdCli__7C4F7684", "Clinic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondBl__IdCli__7C4F7684", "Clinic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="RespondTransplantant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RespondTransplantant : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта RespondTransplantant.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="idClinic">Исходное значение свойства IdClinic.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        /// <param name="factor1">Исходное значение свойства Factor1.</param>
        /// <param name="factor2">Исходное значение свойства Factor2.</param>
        /// <param name="factor3">Исходное значение свойства Factor3.</param>
        /// <param name="factor4">Исходное значение свойства Factor4.</param>
        /// <param name="factor5">Исходное значение свойства Factor5.</param>
        /// <param name="factor6">Исходное значение свойства Factor6.</param>
        /// <param name="createTime">Исходное значение свойства CreateTime.</param>
        /// <param name="waitTime">Исходное значение свойства WaitTime.</param>
        /// <param name="priority">Исходное значение свойства Priority.</param>
        /// <param name="status">Исходное значение свойства Status.</param>
        public static RespondTransplantant CreateRespondTransplantant(global::System.Int32 id, global::System.Int32 idClinic, global::System.Int32 type, global::System.String factor1, global::System.String factor2, global::System.String factor3, global::System.String factor4, global::System.String factor5, global::System.String factor6, global::System.DateTime createTime, global::System.DateTime waitTime, global::System.Int32 priority, global::System.String status)
        {
            RespondTransplantant respondTransplantant = new RespondTransplantant();
            respondTransplantant.Id = id;
            respondTransplantant.IdClinic = idClinic;
            respondTransplantant.Type = type;
            respondTransplantant.Factor1 = factor1;
            respondTransplantant.Factor2 = factor2;
            respondTransplantant.Factor3 = factor3;
            respondTransplantant.Factor4 = factor4;
            respondTransplantant.Factor5 = factor5;
            respondTransplantant.Factor6 = factor6;
            respondTransplantant.CreateTime = createTime;
            respondTransplantant.WaitTime = waitTime;
            respondTransplantant.Priority = priority;
            respondTransplantant.Status = status;
            return respondTransplantant;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdClinic
        {
            get
            {
                return _IdClinic;
            }
            set
            {
                OnIdClinicChanging(value);
                ReportPropertyChanging("IdClinic");
                _IdClinic = StructuralObject.SetValidValue(value, "IdClinic");
                ReportPropertyChanged("IdClinic");
                OnIdClinicChanged();
            }
        }
        private global::System.Int32 _IdClinic;
        partial void OnIdClinicChanging(global::System.Int32 value);
        partial void OnIdClinicChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor1
        {
            get
            {
                return _Factor1;
            }
            set
            {
                OnFactor1Changing(value);
                ReportPropertyChanging("Factor1");
                _Factor1 = StructuralObject.SetValidValue(value, false, "Factor1");
                ReportPropertyChanged("Factor1");
                OnFactor1Changed();
            }
        }
        private global::System.String _Factor1;
        partial void OnFactor1Changing(global::System.String value);
        partial void OnFactor1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor2
        {
            get
            {
                return _Factor2;
            }
            set
            {
                OnFactor2Changing(value);
                ReportPropertyChanging("Factor2");
                _Factor2 = StructuralObject.SetValidValue(value, false, "Factor2");
                ReportPropertyChanged("Factor2");
                OnFactor2Changed();
            }
        }
        private global::System.String _Factor2;
        partial void OnFactor2Changing(global::System.String value);
        partial void OnFactor2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor3
        {
            get
            {
                return _Factor3;
            }
            set
            {
                OnFactor3Changing(value);
                ReportPropertyChanging("Factor3");
                _Factor3 = StructuralObject.SetValidValue(value, false, "Factor3");
                ReportPropertyChanged("Factor3");
                OnFactor3Changed();
            }
        }
        private global::System.String _Factor3;
        partial void OnFactor3Changing(global::System.String value);
        partial void OnFactor3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor4
        {
            get
            {
                return _Factor4;
            }
            set
            {
                OnFactor4Changing(value);
                ReportPropertyChanging("Factor4");
                _Factor4 = StructuralObject.SetValidValue(value, false, "Factor4");
                ReportPropertyChanged("Factor4");
                OnFactor4Changed();
            }
        }
        private global::System.String _Factor4;
        partial void OnFactor4Changing(global::System.String value);
        partial void OnFactor4Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor5
        {
            get
            {
                return _Factor5;
            }
            set
            {
                OnFactor5Changing(value);
                ReportPropertyChanging("Factor5");
                _Factor5 = StructuralObject.SetValidValue(value, false, "Factor5");
                ReportPropertyChanged("Factor5");
                OnFactor5Changed();
            }
        }
        private global::System.String _Factor5;
        partial void OnFactor5Changing(global::System.String value);
        partial void OnFactor5Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor6
        {
            get
            {
                return _Factor6;
            }
            set
            {
                OnFactor6Changing(value);
                ReportPropertyChanging("Factor6");
                _Factor6 = StructuralObject.SetValidValue(value, false, "Factor6");
                ReportPropertyChanged("Factor6");
                OnFactor6Changed();
            }
        }
        private global::System.String _Factor6;
        partial void OnFactor6Changing(global::System.String value);
        partial void OnFactor6Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateTime
        {
            get
            {
                return _CreateTime;
            }
            set
            {
                OnCreateTimeChanging(value);
                ReportPropertyChanging("CreateTime");
                _CreateTime = StructuralObject.SetValidValue(value, "CreateTime");
                ReportPropertyChanged("CreateTime");
                OnCreateTimeChanged();
            }
        }
        private global::System.DateTime _CreateTime;
        partial void OnCreateTimeChanging(global::System.DateTime value);
        partial void OnCreateTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime WaitTime
        {
            get
            {
                return _WaitTime;
            }
            set
            {
                OnWaitTimeChanging(value);
                ReportPropertyChanging("WaitTime");
                _WaitTime = StructuralObject.SetValidValue(value, "WaitTime");
                ReportPropertyChanged("WaitTime");
                OnWaitTimeChanged();
            }
        }
        private global::System.DateTime _WaitTime;
        partial void OnWaitTimeChanging(global::System.DateTime value);
        partial void OnWaitTimeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value, "Priority");
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__RespondTr__IdCli__7F2BE32F", "Clinic")]
        public Clinic Clinic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondTr__IdCli__7F2BE32F", "Clinic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondTr__IdCli__7F2BE32F", "Clinic").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clinic> ClinicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondTr__IdCli__7F2BE32F", "Clinic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clinic>("DonorBankDatabaseModel.FK__RespondTr__IdCli__7F2BE32F", "Clinic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="TransactionInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionInfo : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта TransactionInfo.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="timeDate">Исходное значение свойства TimeDate.</param>
        /// <param name="user">Исходное значение свойства User.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        /// <param name="about">Исходное значение свойства About.</param>
        public static TransactionInfo CreateTransactionInfo(global::System.Int32 id, global::System.DateTime timeDate, global::System.String user, global::System.String type, global::System.String about)
        {
            TransactionInfo transactionInfo = new TransactionInfo();
            transactionInfo.Id = id;
            transactionInfo.TimeDate = timeDate;
            transactionInfo.User = user;
            transactionInfo.Type = type;
            transactionInfo.About = about;
            return transactionInfo;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TimeDate
        {
            get
            {
                return _TimeDate;
            }
            set
            {
                OnTimeDateChanging(value);
                ReportPropertyChanging("TimeDate");
                _TimeDate = StructuralObject.SetValidValue(value, "TimeDate");
                ReportPropertyChanged("TimeDate");
                OnTimeDateChanged();
            }
        }
        private global::System.DateTime _TimeDate;
        partial void OnTimeDateChanging(global::System.DateTime value);
        partial void OnTimeDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, false, "User");
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String About
        {
            get
            {
                return _About;
            }
            set
            {
                OnAboutChanging(value);
                ReportPropertyChanging("About");
                _About = StructuralObject.SetValidValue(value, false, "About");
                ReportPropertyChanged("About");
                OnAboutChanged();
            }
        }
        private global::System.String _About;
        partial void OnAboutChanging(global::System.String value);
        partial void OnAboutChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DonorBankDatabaseModel", Name="Transplantant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transplantant : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Transplantant.
        /// </summary>
        /// <param name="id">Исходное значение свойства Id.</param>
        /// <param name="type">Исходное значение свойства Type.</param>
        /// <param name="idDonor">Исходное значение свойства IdDonor.</param>
        /// <param name="factor1">Исходное значение свойства Factor1.</param>
        /// <param name="factor2">Исходное значение свойства Factor2.</param>
        /// <param name="factor3">Исходное значение свойства Factor3.</param>
        /// <param name="factor4">Исходное значение свойства Factor4.</param>
        /// <param name="factor5">Исходное значение свойства Factor5.</param>
        /// <param name="factor6">Исходное значение свойства Factor6.</param>
        /// <param name="storageTime">Исходное значение свойства StorageTime.</param>
        public static Transplantant CreateTransplantant(global::System.Int32 id, global::System.String type, global::System.Int32 idDonor, global::System.String factor1, global::System.String factor2, global::System.String factor3, global::System.String factor4, global::System.String factor5, global::System.String factor6, global::System.DateTime storageTime)
        {
            Transplantant transplantant = new Transplantant();
            transplantant.Id = id;
            transplantant.Type = type;
            transplantant.IdDonor = idDonor;
            transplantant.Factor1 = factor1;
            transplantant.Factor2 = factor2;
            transplantant.Factor3 = factor3;
            transplantant.Factor4 = factor4;
            transplantant.Factor5 = factor5;
            transplantant.Factor6 = factor6;
            transplantant.StorageTime = storageTime;
            return transplantant;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, false, "Type");
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdDonor
        {
            get
            {
                return _IdDonor;
            }
            set
            {
                OnIdDonorChanging(value);
                ReportPropertyChanging("IdDonor");
                _IdDonor = StructuralObject.SetValidValue(value, "IdDonor");
                ReportPropertyChanged("IdDonor");
                OnIdDonorChanged();
            }
        }
        private global::System.Int32 _IdDonor;
        partial void OnIdDonorChanging(global::System.Int32 value);
        partial void OnIdDonorChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor1
        {
            get
            {
                return _Factor1;
            }
            set
            {
                OnFactor1Changing(value);
                ReportPropertyChanging("Factor1");
                _Factor1 = StructuralObject.SetValidValue(value, false, "Factor1");
                ReportPropertyChanged("Factor1");
                OnFactor1Changed();
            }
        }
        private global::System.String _Factor1;
        partial void OnFactor1Changing(global::System.String value);
        partial void OnFactor1Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor2
        {
            get
            {
                return _Factor2;
            }
            set
            {
                OnFactor2Changing(value);
                ReportPropertyChanging("Factor2");
                _Factor2 = StructuralObject.SetValidValue(value, false, "Factor2");
                ReportPropertyChanged("Factor2");
                OnFactor2Changed();
            }
        }
        private global::System.String _Factor2;
        partial void OnFactor2Changing(global::System.String value);
        partial void OnFactor2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor3
        {
            get
            {
                return _Factor3;
            }
            set
            {
                OnFactor3Changing(value);
                ReportPropertyChanging("Factor3");
                _Factor3 = StructuralObject.SetValidValue(value, false, "Factor3");
                ReportPropertyChanged("Factor3");
                OnFactor3Changed();
            }
        }
        private global::System.String _Factor3;
        partial void OnFactor3Changing(global::System.String value);
        partial void OnFactor3Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor4
        {
            get
            {
                return _Factor4;
            }
            set
            {
                OnFactor4Changing(value);
                ReportPropertyChanging("Factor4");
                _Factor4 = StructuralObject.SetValidValue(value, false, "Factor4");
                ReportPropertyChanged("Factor4");
                OnFactor4Changed();
            }
        }
        private global::System.String _Factor4;
        partial void OnFactor4Changing(global::System.String value);
        partial void OnFactor4Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor5
        {
            get
            {
                return _Factor5;
            }
            set
            {
                OnFactor5Changing(value);
                ReportPropertyChanging("Factor5");
                _Factor5 = StructuralObject.SetValidValue(value, false, "Factor5");
                ReportPropertyChanged("Factor5");
                OnFactor5Changed();
            }
        }
        private global::System.String _Factor5;
        partial void OnFactor5Changing(global::System.String value);
        partial void OnFactor5Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Factor6
        {
            get
            {
                return _Factor6;
            }
            set
            {
                OnFactor6Changing(value);
                ReportPropertyChanging("Factor6");
                _Factor6 = StructuralObject.SetValidValue(value, false, "Factor6");
                ReportPropertyChanged("Factor6");
                OnFactor6Changed();
            }
        }
        private global::System.String _Factor6;
        partial void OnFactor6Changing(global::System.String value);
        partial void OnFactor6Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StorageTime
        {
            get
            {
                return _StorageTime;
            }
            set
            {
                OnStorageTimeChanging(value);
                ReportPropertyChanging("StorageTime");
                _StorageTime = StructuralObject.SetValidValue(value, "StorageTime");
                ReportPropertyChanged("StorageTime");
                OnStorageTimeChanged();
            }
        }
        private global::System.DateTime _StorageTime;
        partial void OnStorageTimeChanging(global::System.DateTime value);
        partial void OnStorageTimeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DonorBankDatabaseModel", "FK__Transplan__IdDon__797309D9", "Donor")]
        public Donor Donor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("DonorBankDatabaseModel.FK__Transplan__IdDon__797309D9", "Donor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("DonorBankDatabaseModel.FK__Transplan__IdDon__797309D9", "Donor").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Donor> DonorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("DonorBankDatabaseModel.FK__Transplan__IdDon__797309D9", "Donor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Donor>("DonorBankDatabaseModel.FK__Transplan__IdDon__797309D9", "Donor", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
